version: '3.9'

services:

  roach-0:
    container_name: roach-0
    hostname: roach-0
    image: cockroachdb/cockroach:latest-v22.2
    command: start  --insecure --join=roach-0,roach-1,roach-2 --listen-addr=roach-0:26257 --advertise-addr=roach-0:26257 --max-sql-memory=.25 --cache=.25
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'

  roach-1:
    container_name: roach-1
    hostname: roach-1
    image: cockroachdb/cockroach:latest-v22.2
    command: start  --insecure --join=roach-0,roach-1,roach-2 --listen-addr=roach-1:26257 --advertise-addr=roach-1:26257 --max-sql-memory=.25 --cache=.25
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'

  roach-2:
    container_name: roach-2
    hostname: roach-2
    image: cockroachdb/cockroach:latest-v22.2
    command: start  --insecure --join=roach-0,roach-1,roach-2 --listen-addr=roach-2:26257 --advertise-addr=roach-2:26257 --max-sql-memory=.25 --cache=.25
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'

  init:
    container_name: init
    image: cockroachdb/cockroach:latest-v22.2
    command: init --host=roach-0 --insecure
    depends_on:
      - roach-0

  lb:
    container_name: lb
    hostname: lb
    build: haproxy
    ports:
      - "26257:26257"
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - roach-0
      - roach-1
      - roach-2

  client:
    container_name: client
    image: cockroachdb/cockroach:latest-v22.2
    entrypoint: ["/usr/bin/tail", "-f", "/dev/null"]
    hostname: client
    depends_on:
      - lb

  flyway:
    container_name: flyway
    hostname: flyway
    image: flyway/flyway:9.15.2
    entrypoint: ["flyway", "migrate"]
    volumes:
      - ./pulsar/flyway/sql:/flyway/sql
      - ./pulsar/flyway/conf:/flyway/conf
    healthcheck:
      test: ["CMD-SHELL", "flyway", "info"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 0s
    depends_on:
      - lb

  pulsar:
    container_name: pulsar
    hostname: pulsar
    image: streamnative/sn-pulsar:2.11.0.5
    command: >
      bash -c "bin/apply-config-from-env.py conf/standalone.conf &&
      exec bin/pulsar standalone -nss -nfw" # disable stream storage and functions worker
    environment:
      allowAutoTopicCreationType: partitioned
      brokerDeleteInactiveTopicsEnabled: "false"
      PULSAR_PREFIX_messagingProtocols: kafka
      PULSAR_PREFIX_kafkaListeners: PLAINTEXT://pulsar:9092
      PULSAR_PREFIX_brokerEntryMetadataInterceptors: org.apache.pulsar.common.intercept.AppendIndexMetadataInterceptor
      PULSAR_PREFIX_webServicePort: "8088"
    ports:
      - 6650:6650
      - 8088:8088
      - 9092:9092

  kafka-client:
    container_name: kafka-client
    build: ./kafka
    entrypoint: ["/usr/bin/tail", "-f", "/dev/null"]
    hostname: kafka-client
